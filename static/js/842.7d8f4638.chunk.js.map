{"version":3,"file":"static/js/842.7d8f4638.chunk.js","mappings":"mTAIMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALW,sCASFC,EAAS,mCAAG,sGACAL,EAASM,IAAT,uBADA,uBACfC,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAASM,IAAT,iBAAuBG,IADjB,uBACrBF,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAO,mCAAG,WAAMD,GAAN,yFACET,EAASM,IAAT,iBAAuBG,EAAvB,aADF,uBACbF,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPI,EAAU,mCAAG,WAAMF,GAAN,yFACDT,EAASM,IAAT,iBAAuBG,EAAvB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH,sDAKVK,EAAS,mCAAG,WAAMC,GAAN,yFACAb,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CAAEU,MAAAA,KAFW,uBACfN,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,qD,+GCMtB,UAhCiB,WAEf,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAW,GAFK,UAGUb,EAAAA,EAAAA,MAHV,gBAGRkB,EAHQ,EAGRA,QACRP,EAASO,GAJO,gDAMhBH,EAAS,EAAD,IANQ,yBAQhBF,GAAW,GARK,4EAAH,qDAYfI,GAEE,GAAE,KAGF,4BACI,2CACCP,EAAMS,OAAS,IAAK,SAAC,IAAD,CAAYT,MAAOA,IACvCE,IAAW,sCACXE,IAAS,4CAGrB,C,uDCnCKM,EAAa,SAAC,GAAe,IAAbV,EAAY,EAAZA,MACZW,GAAWC,EAAAA,EAAAA,MACXC,EAAWb,EAAMc,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,MAAP,OACvB,yBACA,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMN,GAAWO,GAAE,kBAAaxB,GAA9C,SAAqDqB,KAD5CrB,EADc,IAI3B,OAAO,wBAAMmB,GAChB,EAED,MAEAH,EAAWS,aAAe,CACtBnB,MAAO,G","sources":["api/api.js","components/Home/Home.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '4242358c052cb34e9586769939c4f84d';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: apiKey,\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSingleMovies = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\nexport const getSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: { query },\n  });\n  return data;\n};\n","// import Movies from \"components/Movies/Movies\";\nimport { useState, useEffect } from \"react\";\nimport { getMovies } from \"api/api\";\n// import { Link } from \"react-router-dom\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\n\nconst HomePage = () => {\n\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n \n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovies();\n        setItems(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    // if (itemsMovies.length === 0) {\n      fetchMovies();\n        // }\n       }, [])\n\n  return (\n        <div>\n            <h2>Trending today</h2>\n            {items.length > 0 && <MoviesList items={items} />}\n            {loading && <p>...loading</p>}\n            {error && <p>...load failed</p>}\n        </div>\n    )\n}\nexport default HomePage;","import { Link, useLocation } from \"react-router-dom\";\n\n\nconst MoviesList = ({ items }) => {\n    const location = useLocation();\n    const elements = items.map(({ id, title }) =>\n        <li key={id}>\n        <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n    </li>)\n    return <ul>{ elements}</ul>\n}\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    items: []\n};"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSingleMovies","id","getCast","getReviews","getSearch","query","useState","items","setItems","loading","setLoading","error","setError","useEffect","fetchMovies","results","length","MoviesList","location","useLocation","elements","map","title","state","from","to","defaultProps"],"sourceRoot":""}