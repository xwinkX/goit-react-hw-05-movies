{"version":3,"file":"static/js/168.a9b932d1.chunk.js","mappings":"mTAIMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALW,sCASFC,EAAS,mCAAG,sGACAL,EAASM,IAAT,uBADA,uBACfC,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAASM,IAAT,iBAAuBG,IADjB,uBACrBF,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAO,mCAAG,WAAMD,GAAN,yFACET,EAASM,IAAT,iBAAuBG,EAAvB,aADF,uBACbF,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPI,EAAU,mCAAG,WAAMF,GAAN,yFACDT,EAASM,IAAT,iBAAuBG,EAAvB,aADC,uBAChBF,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH,sDAKVK,EAAS,mCAAG,WAAMC,GAAN,yFACAb,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CAAEU,MAAAA,KAFW,uBACfN,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,qD,4IChCtB,GAAiB,E,SC6CjB,EAxCe,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAGAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAW,mCAAG,sGAEZJ,GAAW,GAFC,UAGYT,EAAAA,EAAAA,IAAWG,GAHvB,gBAGLW,EAHK,EAGLA,QACPP,EAASO,GAJG,gDAMZH,EAAS,EAAD,IANI,yBAQZF,GAAW,GARC,4EAAH,qDAWjBI,GACH,GAAE,CAACV,IAEA,IAAMP,EAAOU,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnB,EAApB,EAAoBA,GAApB,OACnB,gBAAIoB,UAAWC,EAAAA,GAAf,WACG,6BAAKH,MACJ,6BAAKC,OAFmBnB,EADT,IAMzB,OACE,2BACKU,IAAW,wCACV,wBAAKZ,IACNc,IAAS,mDAKrB,C","sources":["api/api.js","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '4242358c052cb34e9586769939c4f84d';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: apiKey,\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSingleMovies = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\nexport const getSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: { query },\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from \"react\";\nimport { getReviews} from \"api/api\";\nimport { useParams } from \"react-router-dom\";\nimport css from \"./Reviews.module.css\"\n\n\nconst Review = () => {\n    const { movieId } = useParams();\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n\n    useEffect(() => {\n  \n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const {results} = await getReviews(movieId);\n                setItems(results);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchMovies();\n    }, [movieId])\n      \n        const data = items.map(({ author, content, id }) =>\n            <li className={css.li} key={id}>\n               <p> {author}</p>\n                <p> {content}</p>\n            </li>)\n\n      return (\n        <div>\n            {loading && <p>... Loading</p>}\n              <ul>{data }</ul>\n            {error && <p>...Movies load failed</p>}\n            \n        </div>\n        \n    )\n}\n\nexport default Review;"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSingleMovies","id","getCast","getReviews","getSearch","query","movieId","useParams","useState","items","setItems","loading","setLoading","error","setError","useEffect","fetchMovies","results","map","author","content","className","css"],"sourceRoot":""}